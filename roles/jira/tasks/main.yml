---
  
- name: Install Prerequisites
  apt: name={{ item }} update_cache=true cache_valid_time="{{ 60 * 15 }}"
  with_items:
    - libpq-dev
    - python-psycopg2

- name: Create Directory '/opt/atlassian'
  file: path=/opt/atlassian state=directory

- name: Create Directory '/opt/atlassian/jira'
  file: path=/opt/atlassian/jira state=directory

- name: Check JIRA Install Status
  stat: path=/opt/atlassian/jira/atlassian-jira/META-INF/maven/com.atlassian.jira/atlassian-jira-webapp/pom.properties
  register: jira_pom_properties_stat

- name: Read JIRA Install Version
  shell: cat /opt/atlassian/jira/atlassian-jira/META-INF/maven/com.atlassian.jira/atlassian-jira-webapp/pom.properties
  changed_when: False
  register: jira_pom_properties_cat
  when: jira_pom_properties_stat.stat.isreg is defined and jira_pom_properties_stat.stat.isreg

- name: Parse JIRA Install Version
  # FIXME: the line index here isn't very robust; should filter for the correct line, but not quite sure how
  set_fact: jira_installed_version="{{ jira_pom_properties_cat.stdout_lines[2] | regex_replace('^version=', '') }}"
  when: jira_pom_properties_cat is defined

- debug: msg="jira_installed_version=[{{ jira_installed_version | default('n/a') }}]"

- block:
  
  - name: Response File
    template: src=response.varfile.j2 dest=/opt/atlassian/jira/response.varfile owner=root group=root mode="u=rw,g=rw,o=r"
  
  - name: Download Installer
    get_url: url="{{ jira_installer_url }}" dest="/opt/atlassian/{{ jira_installer_file }}" mode=0550
  
  - name: Install
    command: "/opt/atlassian/{{ jira_installer_file }} -q -varfile /opt/atlassian/response.varfile"
    args:
      chdir: /opt/atlassian/
    notify:
      - Restart Service 'jira'
  
  when: jira_version != jira_installed_version

- name: Create Database
  postgresql_db:
    login_host="{{ rds_postgres_dev_address }}"
    login_user="{{ postgres_dev_master_username }}"
    login_password="{{ postgres_dev_master_password }}"
    name=jira
    encoding='UNICODE'
    lc_collate='C'
    lc_ctype='C'
    template='template0'
  register: create_db_jira

- name: Create Database User
  postgresql_user:
    login_host="{{ rds_postgres_dev_address }}"
    login_user="{{ postgres_dev_master_username }}"
    login_password="{{ postgres_dev_master_password }}"
    db=jira
    name="{{ jira_db_username }}"
    password="{{ jira_db_password}}"
    priv=ALL
  # Workaround for https://github.com/ansible/ansible-modules-core/issues/297
  # Note: This issue makes it impossible to change PostgreSQL user's password/privileges via Ansible.
  when: create_db_jira.changed

- name: Config File 'dbconfig.xml'
  template: src=dbconfig.xml.j2 dest=/var/atlassian/application-data/jira/dbconfig.xml owner=jira group=jira mode="u=rw,g=rw,o="
  notify:
    - Restart Service 'jira'

- name: Config File 'server.xml'
  template: src=server.xml.j2 dest=/opt/atlassian/jira/conf/server.xml owner=root group=root mode="u=rw,g=r,o=r"
  notify:
    - Restart Service 'jira'
