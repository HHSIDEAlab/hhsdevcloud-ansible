##
# This configuration should be included into the `server { ... }` block of
# sites that need HTTPS/SSL:
#
# ```
# server {
#   # Set the SSL certificate keypair to be used for this site.
#   ssl_certificate /var/lib/acme/live/mydomain.example.com/chain;
#   ssl_certificate_key /var/lib/acme/live/mydomain.example.com/privkey;
#
#   # Verify chain of trust of OCSP response using the cert's Root CA and
#   # Intermediate certs.
#   ssl_trusted_certificate /var/lib/acme/live/mydomain.example.com/fullchain;
#
#   # Configure SSL.
#   include /etc/nginx/snippets/ssl_config.conf
# }
# ```
#
# It was mostly generated by this tool:
# <https://mozilla.github.io/server-side-tls/ssl-config-generator/>.
##

listen 443 ssl http2;
listen [::]:443 ssl http2;

# Certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
ssl_session_timeout 1d;
ssl_session_cache shared:SSL:50m;
ssl_session_tickets off;

# The default DH parameters are weak, so use these ones that were generated for
# this system, instead.
ssl_dhparam /etc/ssl/dhparams.pem;

# Modern configuration.
ssl_protocols TLSv1.2;
ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
ssl_prefer_server_ciphers on;

# OCSP Stapling ---
# fetch OCSP records from URL in ssl_certificate and cache them
ssl_stapling on;
ssl_stapling_verify on;
