---

- debconf: name=slapd question='slapd/domain' value='hhsdevcloud.us' vtype='string'
- debconf: name=slapd question='shared/organization' value='HHS IDEA Lab' vtype='string'
- debconf: name=slapd question='slapd/backend' value='HDB' vtype='string'
- debconf: name=slapd question='slapd/password1' value="{{ ldap_root_password }}" vtype='password'
- debconf: name=slapd question='slapd/password2' value="{{ ldap_root_password }}" vtype='password'

- name: Install
  apt: name={{ item }} update_cache=true cache_valid_time="{{ 60 * 15 }}"
  with_items:
    - slapd
    - db-util
    - python-ldap

- ldap_entry: 
    bind_dn: 'cn=admin,dc=hhsdevcloud,dc=us'
    bind_pw: "{{ ldap_root_password }}"
    dn: 'ou=people,dc=hhsdevcloud,dc=us'
    objectClass: ['organizationalUnit']
- ldap_entry:
    bind_dn: 'cn=admin,dc=hhsdevcloud,dc=us'
    bind_pw: "{{ ldap_root_password }}"
    dn: 'ou=groups,dc=hhsdevcloud,dc=us'
    objectClass: ['organizationalUnit']
- ldap_entry:
    bind_dn: 'cn=admin,dc=hhsdevcloud,dc=us'
    bind_pw: "{{ ldap_root_password }}"
    dn: 'ou=services,dc=hhsdevcloud,dc=us'
    objectClass: ['organizationalUnit']

- ldap_entry: 
    bind_dn: 'cn=admin,dc=hhsdevcloud,dc=us'
    bind_pw: "{{ ldap_root_password }}"
    dn: 'cn=jira,ou=services,dc=hhsdevcloud,dc=us' 
    objectClass: ['organizationalRole', 'simpleSecurityObject']
    cn: jira
    userPassword: "{{ ldap_jira_password }}"

# Create `ou=people` entries for each `people` entry (in `../vars/main.yml`).
# Note that this module does not handles updates-- only inserts.
- ldap_entry: 
    bind_dn: 'cn=admin,dc=hhsdevcloud,dc=us'
    bind_pw: "{{ ldap_root_password }}"
    dn: "uid={{ item.key }},ou=people,dc=hhsdevcloud,dc=us"
    objectClass: ['inetOrgPerson', 'posixAccount']
    uid: "{{ item.key }}"
    cn: "{{ item.value.givenName }} {{ item.value.sn }}"
    displayName: "{{ item.value.givenName }} {{ item.value.sn }}"
    givenName: "{{ item.value.givenName }}"
    sn: "{{ item.value.sn }}"
    uidNumber: "{{ item.value.uidAndGidNumber }}"
    gidNumber: "{{ item.value.uidAndGidNumber }}"
    userPassword: "{{ item.value.password }}"
    loginShell: '/bin/bash'
    homeDirectory: "/home/{{ item.key }}"
    mail: "{{ item.value.mail }}"
  with_dict: "{{ people }}"
# Create `ou=groups` entries for each `people` entry (in `../vars/main.yml`).
- ldap_entry:
    bind_dn: 'cn=admin,dc=hhsdevcloud,dc=us'
    bind_pw: "{{ ldap_root_password }}"
    dn: "cn={{ item.key }},ou=groups,dc=hhsdevcloud,dc=us"
    objectClass: 'posixGroup'
    cn: "{{ item.key }}"
    gidNumber: "{{ item.value.uidAndGidNumber }}"
  with_dict: "{{ people }}"

# Update email addresses, as needed.
- ldap_attr:
    bind_dn: 'cn=admin,dc=hhsdevcloud,dc=us'
    bind_pw: "{{ ldap_root_password }}"
    dn: "uid={{ item.key }},ou=people,dc=hhsdevcloud,dc=us"
    state: exact
    name: mail
    values: "{{ item.value.mail }}"
  with_dict: "{{ people }}"
